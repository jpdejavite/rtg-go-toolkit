// Code generated by MockGen. DO NOT EDIT.
// Source: db.go

// Package mock_firestore is a generated GoMock package.
package mock_firestore

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockIDBFirestore is a mock of IDBFirestore interface
type MockIDBFirestore struct {
	ctrl     *gomock.Controller
	recorder *MockIDBFirestoreMockRecorder
}

// MockIDBFirestoreMockRecorder is the mock recorder for MockIDBFirestore
type MockIDBFirestoreMockRecorder struct {
	mock *MockIDBFirestore
}

// NewMockIDBFirestore creates a new mock instance
func NewMockIDBFirestore(ctrl *gomock.Controller) *MockIDBFirestore {
	mock := &MockIDBFirestore{ctrl: ctrl}
	mock.recorder = &MockIDBFirestoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIDBFirestore) EXPECT() *MockIDBFirestoreMockRecorder {
	return m.recorder
}

// ConnectToDatabase mocks base method
func (m *MockIDBFirestore) ConnectToDatabase(base64ServiceAccount string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ConnectToDatabase", base64ServiceAccount)
	ret0, _ := ret[0].(error)
	return ret0
}

// ConnectToDatabase indicates an expected call of ConnectToDatabase
func (mr *MockIDBFirestoreMockRecorder) ConnectToDatabase(base64ServiceAccount interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ConnectToDatabase", reflect.TypeOf((*MockIDBFirestore)(nil).ConnectToDatabase), base64ServiceAccount)
}

// GetDocumentData mocks base method
func (m *MockIDBFirestore) GetDocumentData(collection, document string) (map[string]interface{}, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDocumentData", collection, document)
	ret0, _ := ret[0].(map[string]interface{})
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDocumentData indicates an expected call of GetDocumentData
func (mr *MockIDBFirestoreMockRecorder) GetDocumentData(collection, document interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDocumentData", reflect.TypeOf((*MockIDBFirestore)(nil).GetDocumentData), collection, document)
}
