// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/config/config.go

// Package mock_config is a generated GoMock package.
package mock_config

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockIConfigs is a mock of IConfigs interface
type MockIConfigs struct {
	ctrl     *gomock.Controller
	recorder *MockIConfigsMockRecorder
}

// MockIConfigsMockRecorder is the mock recorder for MockIConfigs
type MockIConfigsMockRecorder struct {
	mock *MockIConfigs
}

// NewMockIConfigs creates a new mock instance
func NewMockIConfigs(ctrl *gomock.Controller) *MockIConfigs {
	mock := &MockIConfigs{ctrl: ctrl}
	mock.recorder = &MockIConfigsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIConfigs) EXPECT() *MockIConfigsMockRecorder {
	return m.recorder
}

// LoadConfig mocks base method
func (m *MockIConfigs) LoadConfig(app string, keys []string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LoadConfig", app, keys)
	ret0, _ := ret[0].(error)
	return ret0
}

// LoadConfig indicates an expected call of LoadConfig
func (mr *MockIConfigsMockRecorder) LoadConfig(app, keys interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LoadConfig", reflect.TypeOf((*MockIConfigs)(nil).LoadConfig), app, keys)
}

// GetConfigAsInt mocks base method
func (m *MockIConfigs) GetConfigAsInt(key string) int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetConfigAsInt", key)
	ret0, _ := ret[0].(int)
	return ret0
}

// GetConfigAsInt indicates an expected call of GetConfigAsInt
func (mr *MockIConfigsMockRecorder) GetConfigAsInt(key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetConfigAsInt", reflect.TypeOf((*MockIConfigs)(nil).GetConfigAsInt), key)
}

// GetConfigAsInt64 mocks base method
func (m *MockIConfigs) GetConfigAsInt64(key string) int64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetConfigAsInt64", key)
	ret0, _ := ret[0].(int64)
	return ret0
}

// GetConfigAsInt64 indicates an expected call of GetConfigAsInt64
func (mr *MockIConfigsMockRecorder) GetConfigAsInt64(key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetConfigAsInt64", reflect.TypeOf((*MockIConfigs)(nil).GetConfigAsInt64), key)
}

// GetConfigAsStr mocks base method
func (m *MockIConfigs) GetConfigAsStr(key string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetConfigAsStr", key)
	ret0, _ := ret[0].(string)
	return ret0
}

// GetConfigAsStr indicates an expected call of GetConfigAsStr
func (mr *MockIConfigsMockRecorder) GetConfigAsStr(key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetConfigAsStr", reflect.TypeOf((*MockIConfigs)(nil).GetConfigAsStr), key)
}
